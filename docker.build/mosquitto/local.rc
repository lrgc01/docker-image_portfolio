#!/bin/bash

FROMIMG="lrgc01/net-stable_slim:${ARCH}"
COMMENT="Mosquitto MQTT server"

STARTFILE=${START_CMD:-"container.start.sh"}
IPFILE=${IPFILE:-"container.host"}
START_DIR=${START_DIR:-"/start"}
# 
# ---- Start command ----
#    ... with workaround to get IP 
#

OLD_IFS="$IFS"
IFS=""

_STARTBODY="#!/bin/bash
# Some environment variables that may be passed to the container
# Any file/script can be uploaded inside a volume using the Docker Host
START_SH=\${DOCKER_START_SH}
WORKDIR=\${DOCKER_WORKDIR:-\"/startup.d\"}

# Start of the container main purpose app
if [ -d \"\$WORKDIR\" ]; then
   cd \"\$WORKDIR\"
fi

# If there is a application script, run it, otherwise run sshd below
if [ -f \"\$START_SH\" ]; then
   bash \"\$START_SH\"
else
   if [ -d \"/$USERDIR_\" ];  then
      # workaround to get my ip
      grep -w \$(hostname) /etc/hosts | awk '{print \$1}' > \"/$USERDIR_/$IPFILE\"
   fi
   # -D to run the daemon in foreground
   /usr/sbin/sshd -D
fi"
#
# ---- end workaround IP ----
#
# Dockerfile
#
_DOCKERBODY="#
#
# This is a Dockerfile made from create.sh script - don't change here
#
FROM $FROMIMG

LABEL Comment=\"$COMMENT\"

RUN set -ex && \\
    apt-get update && \\
    apt-get install -q -y --install-recommends mosquitto && \\
    apt-get clean && \\
    rm -f /var/cache/apt/pkgcache.bin /var/cache/apt/srcpkgcache.bin && \\
    rm -fr /var/lib/apt/lists/* && \\
    mkdir -p /run/mosquitto $START_DIR && chown mosquitto /run/mosquitto

COPY mosquitto.start.sh $STARTFILE $START_DIR/

# If someone wants TCP instead of socket
EXPOSE 1883 
EXPOSE 8883 
EXPOSE 22

# Add VOLUMEs to allow backup of config, logs and other (this is a best practice)
VOLUME  [\"/var/log/mosquitto\",\"/var/lib/mosquitto\"]

CMD [\"sh\",\"$START_DIR/$STARTFILE\"]"

IFS="$OLD_IFS"

#
# ---- end Dockerfile ----
#

