#FROMIMG="lrgc01/python3-pip:${ARCH}"
COMMENT="Google Cloud CLI over net-stable_slim"
FROMIMG="lrgc01/debian-net:${ARCH}"

if [ "$ARCH" != "amd64" ]; then
   echo "gcloud-cli only in amd64 architecture for now. Exiting."
   exit 0
fi

START_DIR=${START_DIR:-"/start"}
STARTFILE=${START_CMD:-"start.sh"}

IPFILE=${PYTHON3_IPFILE:-"host.ip"}

# 
# ---- Start command ----
#    ... with workaround to get IP 
#
OLD_IFS="$IFS"
IFS=""

_STARTBODY="#!/bin/bash

# workaround to get my ip
grep -w \$(hostname) /etc/hosts | awk '{print \$1}' > \"$START_DIR/$IPFILE\"

/usr/sbin/sshd -D
"
#
# ---- end start command ----
#
# ---- Dockerfile ----
#
_DOCKERBODY="#
# This is a Dockerfile made from create.sh script - don't change here
#
FROM $FROMIMG

LABEL Comment=\"$COMMENT\"

RUN set -ex && \\
    apt update && apt install gnupg -y && \\
    echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" \\
    | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \\
    | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg && \\
    apt-get update -y && apt-get install google-cloud-cli -y && \\
    \$(gcloud info --format=\"value(basic.python_location)\") -m pip install numpy && \\
    apt-get clean && \\
    rm -f /var/cache/apt/pkgcache.bin /var/cache/apt/srcpkgcache.bin && \\
    rm -fr /var/lib/apt/lists/* && \\
    rm -fr /usr/share/man/man* && \\
    mkdir -p $START_DIR

COPY $STARTFILE $START_DIR/

CMD [\"sh\",\"$START_DIR/$STARTFILE\"]"

#
# ---- end Dockerfile ----
#

IFS="$OLD_IFS"

