#!/bin/bash

THIS="$0"

export BASEDIR=${DOCKER_BASEDIR:-"/uwsgi.d"}
export RUNUSER=${DOCKER_RUNUSER:-"uwsgi"}

export UWSGI_DAEMON="no"

cd $BASEDIR

if [ $(whoami)x = "rootx" ] ; then
   export UWSGI_DAEMON="yes"
   env > environment.rc
   su -l $RUNUSER -s /bin/bash -c "sh $THIS $*"
   # then start sshd as root
   /usr/sbin/sshd -D
   exit 0
fi

#set -x

[ -f "./environment.rc" ] && . ./environment.rc
export HOME=$BASEDIR
export WORKDIR=$BASEDIR


#
# Receive (or not) some env variables from Docker container
# All of them start with DOCKER_
# The "UWSGI" ones go into INI file
#
START_CMD=${DOCKER_START_CMD:-"uwsgi.start"}
UWSGI_LOG=${DOCKER_UWSGI_LOG:-"uwsgi.log"}
UWSGI_HTTP=${DOCKER_UWSGI_HTTP:-"0.0.0.0:9090"}
UWSGI_APP=${DOCKER_UWSGI_APP:-"uwsgi_server.py"}
UWSGI_APPDIR=${DOCKER_UWSGI_APPDIR:-"/uwsgi.d/appdir"}
UWSGI_INI=${DOCKER_UWSGI_INI:-"uwsgi.ini"}
UWSGI_PROCESSES=${DOCKER_UWSGI_PROCESSES:-"4"}
UWSGI_THREADS=${DOCKER_UWSGI_THREADS:-"2"}
UWSGI_STATS=${DOCKER_UWSGI_STATS:-"0.0.0.0:9191"}
USERDIR=${DOCKER_USERDIR:-"/uwsgi.d/uwsgi"}
CONFIGDIR=${DOCKER_CONFIGDIR:-"/uwsgi.d"}
LOGDIR=${DOCKER_LOGDIR:-"/uwsgi.d"}
USR_=${DOCKER_UWSGI_USR:-"uwsgi"}
GRP_=${DOCKER_UWSGI_GRP:-"uwsgi"}


# Make sure every directory is ready to do the job
mkdir -p $USERDIR $CONFIGDIR $LOGDIR > /dev/null 2>&1

#
# ---- Build INI file ----
#

cat > $CONFIGDIR/$UWSGI_INI << ENDOF
[uwsgi]
# Let's use 3 connection protocols
http = $UWSGI_HTTP
uwsgi-socket = $BASEDIR/uwsgi.sock
fastcgi-socket = $BASEDIR/fastcgi.sock
chmod-socket = 777
# Could be a file only, but a complete app
# in a defined path is more flexible
#wsgi-file = $UWSGI_APPDIR/$UWSGI_APP
pythonpath = $UWSGI_APPDIR
wsgi = ${UWSGI_APP%.py}
master = true
processes = $UWSGI_PROCESSES
threads = $UWSGI_THREADS
stats = $UWSGI_STATS
uid = $USR_
gid = $GRP_
ENDOF
#
# ---- end INI file ----

# workaround to get my ip (head -1 = in case of duplicates)
grep -w $(hostname) /etc/hosts | head -1 | awk '{print $1}' > "$BASEDIR/uwsgi.host"

# Start the uWSGI server (might change the /$CONFIGDIR/$UWSGI_INI file to fit your needs)
if [ "$UWSGI_DAEMON" = "yes" ]; then 
   /usr/local/bin/uwsgi $CONFIGDIR/$UWSGI_INI --daemonize2 $LOGDIR/$UWSGI_LOG
else
   /usr/local/bin/uwsgi $CONFIGDIR/$UWSGI_INI 
fi

