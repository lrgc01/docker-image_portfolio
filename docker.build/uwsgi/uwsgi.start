#!/bin/bash

# workaround to get my ip (head -1 = in case of duplicates)
#grep -w $(hostname) /etc/hosts | head -1 | awk '{print $1}' > "/uwsgi.d/uwsgi.host"

#
# Receive (or not) some env variables from Docker container
#
START_CMD=${DOCKER_START_CMD:-"uwsgi.start"}
UWSGI_LOG=${DOCKER_UWSGI_LOG:-"uwsgi.log"}
UWSGI_HTTP=${DOCKER_UWSGI_HTTP:-"0.0.0.0:9090"}
UWSGI_APP=${DOCKER_UWSGI_APP:-"uwsgi_server.py"}
UWSGI_APPDIR=${DOCKER_UWSGI_APPDIR:-"appdir"}
UWSGI_INI=${DOCKER_UWSGI_INI:-"uwsgi.ini"}
UWSGI_PROCESSES=${DOCKER_UWSGI_PROCESSES:-"4"}
UWSGI_THREADS=${DOCKER_UWSGI_THREADS:-"2"}
UWSGI_STATS=${DOCKER_UWSGI_STATS:-"0.0.0.0:9191"}
USERDIR_=${DOCKER_UWSGI_USERDIR:-"uwsgi.d"}
USR_=${DOCKER_UWSGI_USR:-"uwsgi"}
GRP_=${DOCKER_UWSGI_GRP:-"uwsgi"}

#
# ---- Build INI file ----
#

cat > $UWSGI_INI << ENDOF
[uwsgi]
# Let's use 3 connection protocols
http = $UWSGI_HTTP
uwsgi-socket = /$USERDIR_/uwsgi.sock
fastcgi-socket = /$USERDIR_/fastcgi.sock
chmod-socket = 777
# Could be a file only, but a complete app
# in a defined path is more flexible
#wsgi-file = /$USERDIR_/$UWSGI_APPDIR/$UWSGI_APP
pythonpath = /$USERDIR_/$UWSGI_APPDIR
wsgi = ${UWSGI_APP%.py}
master = true
processes = $UWSGI_PROCESSES
threads = $UWSGI_THREADS
stats = $UWSGI_STATS
uid = $USR_
gid = $GRP_
ENDOF
#
# ---- end INI file ----

# Start the uWSGI server (might change the /$USERDIR_/$UWSGI_INI file to fit your needs)
echo /usr/local/bin/uwsgi /$USERDIR_/$UWSGI_INI --daemonize2 /$USERDIR_/$UWSGI_LOG

# then start sshd
#/usr/sbin/sshd -D

