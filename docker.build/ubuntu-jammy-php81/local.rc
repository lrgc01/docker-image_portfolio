#!/bin/bash

FROMIMG="lrgc01/ubuntu-jammy-net:${ARCH}"
COMMENT="PHP and php-fpm software + server over ubuntu Jammy Jellyfish openssh-server image"

# Not used, just in case ...
UID_=${JENKINS_UID:-102}
GID_=${JENKINS_GID:-103}
USR_=${JENKINS_USR:-pyuser}
GRP_=${JENKINS_GRP:-pygrp}
# This is globally used
USERDIR_=${JENKINS_HOMEDIR:-var/lib/jenkins}
USERDIR_=${USERDIR_#/}

STARTFILE=${PHP_START_CMD:-"php.start"}
IPFILE=${PHP_IPFILE:-"php.host"}
START_DIR=${PHP_START_DIR:-"/start.d"}
PHPVER="8.1"

# 
# ---- Start command ----
#    ... with workaround to get IP 
#
OLD_IFS="$IFS"
IFS=""

_STARTBODY="#!/bin/bash

# Some environment variables that may be passed to the container
# Any file/script can be uploaded inside a volume using the Docker Host
START_SH=\${DOCKER_START_SH}
WORKDIR=\${DOCKER_WORKDIR:-\"/startup.d\"}

# First start the fpm server as a daemon
/usr/sbin/php-fpm$PHPVER --daemonize --fpm-config /etc/php/$PHPVER/fpm/php-fpm.conf

# Start of the container main purpose app
if [ -d \"\$WORKDIR\" ]; then
   cd \"\$WORKDIR\"
fi

# If there is a application script, run it, otherwise run sshd below
if [ -f \"\$START_SH\" ]; then
   bash \"\$START_SH\"
else
   if [ -d \"/$USERDIR_\" ];  then
      # workaround to get my ip
      grep -w \$(hostname) /etc/hosts | awk '{print \$1}' > \"/$USERDIR_/$IPFILE\"
   fi
   # -D to run the daemon in foreground
   /usr/sbin/sshd -D
fi
"
#
# ---- end workaround IP ----

#
# Dockerfile
#
_DOCKERBODY="#
# This is a Dockerfile made from create.sh script - don't change here
#
FROM $FROMIMG

LABEL Comment=\"$COMMENT\"

RUN export DEBIAN_FRONTEND=noninteractive && \\
    groupadd -g $GID_ $GRP_ && \\
    useradd -M -u $UID_ -g $GRP_ -d /$USERDIR_ $USR_ && \\
    set -ex && \\
    apt-get update && \\
    apt-get install -q -y php$PHPVER php$PHPVER-fpm php$PHPVER-mysql php$PHPVER-gd php$PHPVER-curl php$PHPVER-mbstring php$PHPVER-intl php$PHPVER-xml php$PHPVER-zip php$PHPVER-imagick && \\
    apt-get clean && \\
    rm -f /var/cache/apt/pkgcache.bin /var/cache/apt/srcpkgcache.bin && \\
    rm -fr /var/lib/apt/lists/* && \\
    rm -fr /usr/share/man/man*/* && \\
    mkdir -p /run/php $START_DIR

COPY $STARTFILE $START_DIR/
COPY policy.xml /etc/ImageMagick-6/

# If someone wants TCP instead of socket
EXPOSE 9000

# Add VOLUMEs to allow backup of config, logs and other (this is a best practice)
VOLUME  [\"/run/php\",\"/etc/php\"]

CMD [\"sh\",\"$START_DIR/$STARTFILE\"]
"
IFS="$OLD_IFS"

#
# ---- end Dockerfile ----
#
